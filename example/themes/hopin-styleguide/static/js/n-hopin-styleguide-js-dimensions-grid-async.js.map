{"version":3,"file":"n-hopin-styleguide-js-dimensions-grid-async.js","sources":["../../../src/static/js/_friendly-name.ts","../../../src/static/js/_clipboard.ts","../../../src/static/js/_create-table.ts","../../../src/static/js/n-hopin-styleguide-js-dimensions-grid-async.ts","../../../src/static/js/_variable-group.ts"],"sourcesContent":["export function friendlyName(varName: string): string {\n  const parts = varName.split(/_|-/g);\n  const words: string[] = [];\n  for (const p of parts) {\n    if (p == '') {\n      continue;\n    }\n\n    words.push(p.charAt(0).toUpperCase()  + p.slice(1).toLowerCase());\n  }\n  return words.join(' ');\n}\n\nexport function friendlyNameFromURL(urlString: string, fileSuffix: string): string {\n  const filenameWithExt = urlString.substring(urlString.lastIndexOf('/')+1);\n  const filename = filenameWithExt.substring(0, filenameWithExt.lastIndexOf(fileSuffix));\n  return friendlyName(filename);\n}","export function copyToClipboard(txt: string): boolean {\n  const hiddenElement = document.createElement('div');\n  hiddenElement.textContent = txt;\n  document.body.appendChild(hiddenElement);\n\n  var range = document.createRange();\n  range.selectNode(hiddenElement);\n\n  window.getSelection().empty()\n  window.getSelection().addRange(range);\n\n  let success = false;\n  try {\n    // Now that we've selected the anchor text, execute the copy command\n    success = document.execCommand('copy');\n  } catch(err) {\n    console.log('Error thrown when copying text: ', err);\n  }\n\n  // Remove the selections\n  window.getSelection().removeRange(range);\n  document.body.removeChild(hiddenElement);\n\n  return success;\n}","import {Variable} from './_variable-group';\nimport {copyToClipboard} from './_clipboard';\n\nconst NAMESPACE_CLASS = 'n-hopin';\nconst VAR_TABLE_CLASS = 'c-variable-table';\n\nexport function createVariableTable(variables: Variable[]): HTMLElement {\n    const columns = [\"Variable Name\", \"Value\", \"\"];\n    const rows: Array<Array<string|HTMLElement>> = []\n    for (const v of variables) {\n        const copyText = document.createElement('div');\n      copyText.textContent = 'Copy';\n      copyText.addEventListener('click', (e) => {\n        e.preventDefault();\n        const success = copyToClipboard(v.variableName);\n        if (success) {\n          copyText.textContent = 'Copied';\n          setTimeout(() => {\n            copyText.textContent = 'Copy';\n          }, 1000);\n        }\n      });\n      rows.push([v.variableName, v.value, copyText]);\n    }\n    return createTable({\n        columns,\n        rows,\n    });\n}\n\nexport function createTable(data: VARIABLE_TABLE): HTMLElement {\n    const table = document.createElement('table');\n    table.classList.add(NAMESPACE_CLASS);\n    table.classList.add(VAR_TABLE_CLASS);\n    \n    const tblHead = document.createElement('thead');\n    const tblBody = document.createElement('tbody');\n    table.appendChild(tblHead);\n    table.appendChild(tblBody);\n\n    const headRow = document.createElement('tr');\n    for (const c of data.columns) {\n        const heading = document.createElement('th');\n        heading.textContent = c;\n        headRow.appendChild(heading);\n    }\n    tblHead.appendChild(headRow);\n\n    for (const r of data.rows) {\n        const row = document.createElement('tr');\n        for (const rd of r) {\n            const col = document.createElement('td');\n            if (rd instanceof HTMLElement) {\n                col.appendChild(rd);\n            } else if (typeof rd === 'string') {\n                col.textContent = rd;\n            } else if (rd['variable']) {\n                // This occurs if the CSS variable\n                // is an assignment of another CSS variable.\n                col.textContent = rd['variable'];\n            }\n            row.appendChild(col);\n        }\n        tblBody.appendChild(row);\n    }\n    return table;\n}\n\ninterface VARIABLE_TABLE {\n    columns: string[];\n    rows: Array<Array<string|HTMLElement>>;\n}"," \nimport {VariableGroup, Variable} from './_variable-group';\nimport {createVariableTable} from './_create-table';\n\nconst DIMENS_SUFFIX = 'dimensions.css';\nconst DIMENS_SELECTOR = '.n-hopin-styleguide-js-dimensions-grid';\n\nclass DimensTable extends VariableGroup {\n    constructor() {\n        super(DIMENS_SELECTOR, DIMENS_SUFFIX);\n    }\n\n    renderData(variables: Variable[]): HTMLElement[] {\n        return [createVariableTable(variables)];\n    }\n}\n\nwindow.addEventListener('load', function() {\n    if (!document.querySelector(DIMENS_SELECTOR)) {\n        return\n    }\n    new DimensTable().render();\n});","import { friendlyName, friendlyNameFromURL } from \"./_friendly-name\";\n\nconst namespace = 'n-hopin-styleguide-';\nconst GROUP_CONTAINER_CLASS = `${namespace}c-variable-group`;\nconst GROUP_TITLE_CLASS = `${namespace}c-variable-group__title`;\n\nexport abstract class VariableGroup {\n    constructor(private containerSelector: string, private fileSuffix: string) {}\n\n    getGroups(): Group[] {\n        const groups: { [key: string]: Group; } = {};\n        for (const s of document.styleSheets) {\n            try {\n                if (!s.href) {\n                    continue;\n                }\n\n                if (s.href.lastIndexOf(this.fileSuffix) !== s.href.length - this.fileSuffix.length) {\n                    continue;\n                }\n\n                if (groups[s.href]) {\n                  continue;\n                }\n\n                const group: Group = {\n                    prettyName: friendlyNameFromURL(s.href, this.fileSuffix),\n                    href: s.href,\n                    variables: [],\n                };\n\n                const cssStylesheet = s as CSSStyleSheet;\n                for (const r of cssStylesheet.cssRules) {\n                    const cssStyleRule = r as {\n                        styleMap?: StyleMap\n                    };\n                    if (cssStyleRule['styleMap']) {\n                        const map = cssStyleRule['styleMap'];\n                        for (const e of map.entries()) {\n                            // The format of e is [\"<param name>\", [[\"<value>\"]]]\n                            const name = e[0] as string;\n                            if (name.indexOf('--') === 0) {\n                                let unparsedValue = e[1][0] as CSSUnparsedValue;\n                                group.variables.push({\n                                    prettyName: friendlyName(name),\n                                    variableName: name,\n                                    value: unparsedValue.toString(),\n                                });\n                            }\n                        }\n                    }\n                }\n                groups[s.href] = group;\n            } catch (err) {\n                // External stylesheets will not be accessible from JavaScript\n                // in which case this error will be thrown.\n                console.error(`Unable to read styles for ${s.href}`, err);\n            }\n        }\n        return Object.values(groups);\n    }\n\n    render() {\n        const containerElement = document.querySelector(this.containerSelector);\n        if (!containerElement) {\n            console.warn(`Unable to find container with selector ${this.containerSelector}`)\n            return;\n        }\n\n        const groups = this.getGroups();\n        console.log(`Rendering the following groups:`, groups);\n        for (const g of groups) {\n            const groupContainer = document.createElement('section');\n            groupContainer.classList.add(GROUP_CONTAINER_CLASS);\n\n            if (g.prettyName) {\n                const title = document.createElement('h2');\n                title.classList.add(GROUP_TITLE_CLASS);\n                title.textContent = g.prettyName;\n                groupContainer.appendChild(title);\n            }\n\n            const elements = this.renderData(g.variables);\n            for (const e of elements) {\n                groupContainer.appendChild(e);\n            }\n            containerElement.appendChild(groupContainer);\n        } \n    }\n\n    abstract renderData(variables: Variable[]): HTMLElement[];\n} \n\ninterface Group {\n    prettyName: string|null;\n    href: string;\n    variables: Variable[];\n}\n\nexport interface Variable {\n    prettyName: string|null;\n    variableName: string;\n    value: string;\n}\n\ninterface StyleMap {\n    entries: () => Array<string|Array<string>>;\n}"],"names":["friendlyName","varName","parts","split","words","p","push","charAt","toUpperCase","slice","toLowerCase","join","friendlyNameFromURL","urlString","fileSuffix","filenameWithExt","substring","lastIndexOf","copyToClipboard","txt","hiddenElement","document","createElement","textContent","body","appendChild","range","createRange","selectNode","window","getSelection","empty","addRange","success","execCommand","err","console","log","removeRange","removeChild","createVariableTable","variables","rows","v","copyText","addEventListener","e","preventDefault","variableName","setTimeout","value","data","table","classList","add","tblHead","tblBody","headRow","c","columns","heading","r","row","rd","col","HTMLElement","createTable","DimensTable","[object Object]","containerSelector","this","groups","s","styleSheets","href","length","group","prettyName","cssStylesheet","cssRules","cssStyleRule","map","entries","name","indexOf","unparsedValue","toString","error","Object","values","containerElement","querySelector","warn","getGroups","g","groupContainer","title","elements","renderData","super","render"],"mappings":"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"}